<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__file_acl_helper_test_8java_source" xml:lang="en-US">
<title>FileAclHelperTest.java</title>
<indexterm><primary>C:/Users/User1/git/FileChampion4j/src/test/java/dev/filechampion/filechampion4j/FileAclHelperTest.java</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__file_acl_helper_test_8java_source_1l00001"/>00001 <emphasis role="keyword">package&#32;</emphasis>dev.filechampion.filechampion4j;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00002"/>00002 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00003"/>00003 <emphasis role="keyword">import</emphasis>&#32;org.junit.jupiter.api.BeforeEach;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00004"/>00004 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00005"/>00005 <emphasis role="keyword">import</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;org.junit.jupiter.api.Assertions.assertEquals;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00006"/>00006 <emphasis role="keyword">import</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;org.junit.jupiter.api.Assertions.assertTrue;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00007"/>00007 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00008"/>00008 <emphasis role="keyword">import</emphasis>&#32;org.junit.jupiter.api.Test;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00009"/>00009 <emphasis role="keyword">import</emphasis>&#32;org.junit.jupiter.params.ParameterizedTest;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00010"/>00010 <emphasis role="keyword">import</emphasis>&#32;org.junit.jupiter.params.provider.ValueSource;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00011"/>00011 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00012"/>00012 <emphasis role="keyword">import</emphasis>&#32;java.nio.file.Files;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00013"/>00013 <emphasis role="keyword">import</emphasis>&#32;java.nio.file.Path;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00014"/>00014 <emphasis role="keyword">import</emphasis>&#32;java.nio.file.Paths;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00015"/>00015 <emphasis role="keyword">import</emphasis>&#32;java.nio.file.attribute.AclEntry;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00016"/>00016 <emphasis role="keyword">import</emphasis>&#32;java.nio.file.attribute.AclEntryPermission;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00017"/>00017 <emphasis role="keyword">import</emphasis>&#32;java.nio.file.attribute.AclFileAttributeView;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00018"/>00018 <emphasis role="keyword">import</emphasis>&#32;java.nio.file.attribute.PosixFilePermission;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00019"/>00019 <emphasis role="keyword">import</emphasis>&#32;java.nio.file.attribute.UserPrincipal;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00020"/>00020 <emphasis role="keyword">import</emphasis>&#32;java.nio.file.attribute.UserPrincipalLookupService;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00021"/>00021 <emphasis role="keyword">import</emphasis>&#32;java.util.EnumSet;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00022"/>00022 <emphasis role="keyword">import</emphasis>&#32;java.util.Set;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00023"/>00023 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00024"/>00024 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00025"/><link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_test">00025</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_test">FileAclHelperTest</link>&#32;{
<anchor xml:id="__file_acl_helper_test_8java_source_1l00026"/>00026 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Path&#32;tempFilePath;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;String&#32;sharedMessages&#32;=&#32;<emphasis role="stringliteral">&quot;Expected&#32;error&#32;message&#32;to&#32;start&#32;with&#32;&apos;&quot;</emphasis>;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00029"/>00029 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00030"/>00030 &#32;&#32;&#32;&#32;@BeforeEach
<anchor xml:id="__file_acl_helper_test_8java_source_1l00031"/><link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_test_1aa587d8890bf95d996f67201881ad604a">00031</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_test_1aa587d8890bf95d996f67201881ad604a">setUp</link>()&#32;throws&#32;Exception&#32;{
<anchor xml:id="__file_acl_helper_test_8java_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;a&#32;temporary&#32;file</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempFilePath&#32;=&#32;Files.createTempFile(<emphasis role="stringliteral">&quot;test-file&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;.txt&quot;</emphasis>);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00034"/>00034 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00035"/>00035 &#32;&#32;&#32;&#32;}
<anchor xml:id="__file_acl_helper_test_8java_source_1l00036"/>00036 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Test&#32;change&#32;permissions</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00038"/>00038 &#32;&#32;&#32;&#32;@ParameterizedTest
<anchor xml:id="__file_acl_helper_test_8java_source_1l00039"/>00039 &#32;&#32;&#32;&#32;@ValueSource(strings&#32;=&#32;{<emphasis role="stringliteral">&quot;r&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;w&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;x&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;rw&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;rwx&quot;</emphasis>})
<anchor xml:id="__file_acl_helper_test_8java_source_1l00040"/><link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_test_1ae465fb979542474d1b28d633ea417966">00040</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_test_1ae465fb979542474d1b28d633ea417966">testChangeFileAclWrite</link>(String&#32;newPermissions)&#32;<emphasis role="keywordflow">throws</emphasis>&#32;Exception&#32;{
<anchor xml:id="__file_acl_helper_test_8java_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;String&#32;newOwnerUsername&#32;=&#32;System.getProperty(<emphasis role="stringliteral">&quot;user.name&quot;</emphasis>);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper">FileAclHelper</link>&#32;aclHelper&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper">FileAclHelper</link>();
<anchor xml:id="__file_acl_helper_test_8java_source_1l00043"/>00043 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Change&#32;the&#32;ACL&#32;of&#32;the&#32;temporary&#32;file</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;String&#32;result&#32;=&#32;aclHelper.<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_1ad658260458dfa78c890ca27b06c3e4fa">changeFileAcl</link>(tempFilePath,&#32;newOwnerUsername,&#32;newPermissions);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00046"/>00046 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;that&#32;the&#32;result&#32;is&#32;success</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assertTrue(result.startsWith(<emphasis role="stringliteral">&quot;Success&quot;</emphasis>));
<anchor xml:id="__file_acl_helper_test_8java_source_1l00049"/>00049 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;that&#32;the&#32;new&#32;owner&#32;is&#32;correct</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assertTrue(checkOwner(tempFilePath,&#32;newOwnerUsername),&#32;<emphasis role="stringliteral">&quot;Expected&#32;owner&#32;to&#32;be&#32;&quot;</emphasis>&#32;+&#32;newOwnerUsername&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;but&#32;was&#32;&quot;</emphasis>&#32;+&#32;Files.getOwner(tempFilePath));
<anchor xml:id="__file_acl_helper_test_8java_source_1l00052"/>00052 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;that&#32;the&#32;new&#32;permissions&#32;are&#32;correct</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;String&#32;actualPermissions&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;String&#32;os&#32;=&#32;System.getProperty(<emphasis role="stringliteral">&quot;os.name&quot;</emphasis>);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(os.startsWith(<emphasis role="stringliteral">&quot;Windows&quot;</emphasis>))&#32;{
<anchor xml:id="__file_acl_helper_test_8java_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;actualPermissions&#32;=&#32;getAclPermissions(tempFilePath);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__file_acl_helper_test_8java_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;actualPermissions&#32;=&#32;getPosixFilePermissions(tempFilePath);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__file_acl_helper_test_8java_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assertEquals(newPermissions,&#32;actualPermissions);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00062"/>00062 &#32;&#32;&#32;&#32;}
<anchor xml:id="__file_acl_helper_test_8java_source_1l00063"/>00063 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Test&#32;non&#32;existing&#32;permissions</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00065"/>00065 &#32;&#32;&#32;&#32;@Test
<anchor xml:id="__file_acl_helper_test_8java_source_1l00066"/><link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_test_1aa6b66d5dbce54c570458022cc3d4c36c">00066</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_test_1aa6b66d5dbce54c570458022cc3d4c36c">testChangeFileAclNonExistingPermissions</link>()&#32;throws&#32;Exception&#32;{
<anchor xml:id="__file_acl_helper_test_8java_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;String&#32;newPermissions&#32;=&#32;<emphasis role="stringliteral">&quot;invalid-permissions&quot;</emphasis>;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;String&#32;newOwnerUsername&#32;=&#32;System.getProperty(<emphasis role="stringliteral">&quot;user.name&quot;</emphasis>);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper">FileAclHelper</link>&#32;aclHelper&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper">FileAclHelper</link>();
<anchor xml:id="__file_acl_helper_test_8java_source_1l00070"/>00070 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Change&#32;the&#32;ACL&#32;of&#32;the&#32;temporary&#32;file</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;String&#32;result&#32;=&#32;aclHelper.<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_1ad658260458dfa78c890ca27b06c3e4fa">changeFileAcl</link>(tempFilePath,&#32;newOwnerUsername,&#32;newPermissions);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00073"/>00073 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;that&#32;the&#32;result&#32;is&#32;success</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;String&#32;expectedErrMsg&#32;=&#32;<emphasis role="stringliteral">&quot;Error:&#32;Invalid&#32;permissions&quot;</emphasis>;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assertTrue(result.startsWith(expectedErrMsg),&#32;String.format(<emphasis role="stringliteral">&quot;%s&#32;%s&apos;&#32;but&#32;got:&#32;%s&quot;</emphasis>,&#32;sharedMessages,&#32;expectedErrMsg,&#32;result));
<anchor xml:id="__file_acl_helper_test_8java_source_1l00077"/>00077 &#32;&#32;&#32;&#32;}
<anchor xml:id="__file_acl_helper_test_8java_source_1l00078"/>00078 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;getUserPrinciple&#32;failure</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00080"/>00080 &#32;&#32;&#32;&#32;@Test
<anchor xml:id="__file_acl_helper_test_8java_source_1l00081"/><link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_test_1aff40c0a17bdb0cfe2699d3daa6068691">00081</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_test_1aff40c0a17bdb0cfe2699d3daa6068691">testGetUserPrincipleFailure</link>()&#32;throws&#32;Exception&#32;{
<anchor xml:id="__file_acl_helper_test_8java_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;String&#32;newPermissions&#32;=&#32;<emphasis role="stringliteral">&quot;rwx&quot;</emphasis>;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper">FileAclHelper</link>&#32;aclHelper&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper">FileAclHelper</link>();
<anchor xml:id="__file_acl_helper_test_8java_source_1l00084"/>00084 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Change&#32;the&#32;ACL&#32;of&#32;the&#32;temporary&#32;file</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;String&#32;result&#32;=&#32;aclHelper.<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_1ad658260458dfa78c890ca27b06c3e4fa">changeFileAcl</link>(tempFilePath,&#32;<emphasis role="stringliteral">&quot;invalid-user-394f84398fn3948dfn239048d023d&quot;</emphasis>,&#32;newPermissions);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00087"/>00087 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;that&#32;the&#32;result&#32;is&#32;success</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;String&#32;expectedErrMsg&#32;=&#32;<emphasis role="stringliteral">&quot;Error:&#32;Could&#32;not&#32;get&#32;user&#32;principal&quot;</emphasis>;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assertTrue(result.startsWith(expectedErrMsg),&#32;String.format(<emphasis role="stringliteral">&quot;%s&#32;%s&apos;&#32;but&#32;got:&#32;%s&quot;</emphasis>,&#32;sharedMessages,&#32;expectedErrMsg,&#32;result));
<anchor xml:id="__file_acl_helper_test_8java_source_1l00091"/>00091 &#32;&#32;&#32;&#32;}
<anchor xml:id="__file_acl_helper_test_8java_source_1l00092"/>00092 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00093"/>00093 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;access&#32;denied&#32;scenario&#32;in&#32;windows</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00094"/>00094 &#32;&#32;&#32;&#32;@Test
<anchor xml:id="__file_acl_helper_test_8java_source_1l00095"/><link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_test_1a881ee2f22b50b44fe02c3a6c0174fafa">00095</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_test_1a881ee2f22b50b44fe02c3a6c0174fafa">testAccessDeniedFailure</link>()&#32;throws&#32;Exception&#32;{
<anchor xml:id="__file_acl_helper_test_8java_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(System.getProperty(<emphasis role="stringliteral">&quot;os.name&quot;</emphasis>).startsWith(<emphasis role="stringliteral">&quot;Windows&quot;</emphasis>))&#32;{
<anchor xml:id="__file_acl_helper_test_8java_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;String&#32;newPermissions&#32;=&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper">FileAclHelper</link>&#32;aclHelper&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper">FileAclHelper</link>();
<anchor xml:id="__file_acl_helper_test_8java_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aclHelper.<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_1ad658260458dfa78c890ca27b06c3e4fa">changeFileAcl</link>(tempFilePath,&#32;System.getProperty(<emphasis role="stringliteral">&quot;user.name&quot;</emphasis>),&#32;newPermissions);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;String&#32;result&#32;=&#32;aclHelper.<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_1ad658260458dfa78c890ca27b06c3e4fa">changeFileAcl</link>(tempFilePath,&#32;System.getProperty(<emphasis role="stringliteral">&quot;user.name&quot;</emphasis>),&#32;<emphasis role="stringliteral">&quot;rwx&quot;</emphasis>);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00101"/>00101 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;String&#32;expectedErrMsg&#32;=&#32;<emphasis role="stringliteral">&quot;Error:&#32;Access&#32;denied&quot;</emphasis>;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assertTrue(result.startsWith(expectedErrMsg),&#32;String.format(<emphasis role="stringliteral">&quot;%s&#32;%s&apos;&#32;but&#32;got:&#32;%s&quot;</emphasis>,&#32;sharedMessages,&#32;expectedErrMsg,&#32;result));
<anchor xml:id="__file_acl_helper_test_8java_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;assertTrue(<emphasis role="keyword">true</emphasis>);}
<anchor xml:id="__file_acl_helper_test_8java_source_1l00105"/>00105 &#32;&#32;&#32;&#32;}
<anchor xml:id="__file_acl_helper_test_8java_source_1l00106"/>00106 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00107"/>00107 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;file&#32;system&#32;failure</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00108"/>00108 &#32;&#32;&#32;&#32;@Test
<anchor xml:id="__file_acl_helper_test_8java_source_1l00109"/><link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_test_1ad0faf1f60aa32e6c34397130da5831ff">00109</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_test_1ad0faf1f60aa32e6c34397130da5831ff">testFileSystemFailure</link>()&#32;throws&#32;Exception&#32;{
<anchor xml:id="__file_acl_helper_test_8java_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;String&#32;newPermissions&#32;=&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper">FileAclHelper</link>&#32;aclHelper&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper">FileAclHelper</link>();
<anchor xml:id="__file_acl_helper_test_8java_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;String&#32;newOwnerUsername&#32;=&#32;System.getProperty(<emphasis role="stringliteral">&quot;user.name&quot;</emphasis>);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00113"/>00113 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Change&#32;the&#32;ACL&#32;of&#32;the&#32;temporary&#32;file</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aclHelper.<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_1ad658260458dfa78c890ca27b06c3e4fa">changeFileAcl</link>(tempFilePath,&#32;newOwnerUsername,&#32;newPermissions);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00116"/>00116 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;String&#32;result&#32;=&#32;aclHelper.<link linkend="_classdev_1_1filechampion_1_1filechampion4j_1_1_file_acl_helper_1ad658260458dfa78c890ca27b06c3e4fa">changeFileAcl</link>(Paths.get(<emphasis role="stringliteral">&quot;C:\\invalid\\path\\to\\file.txt&quot;</emphasis>),&#32;newOwnerUsername,&#32;<emphasis role="stringliteral">&quot;rwx&quot;</emphasis>);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00118"/>00118 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;that&#32;the&#32;result&#32;is&#32;success</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;String&#32;expectedErrMsg&#32;=&#32;<emphasis role="stringliteral">&quot;Error:&#32;File&#32;system&#32;error&quot;</emphasis>;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assertTrue(result.startsWith(expectedErrMsg),&#32;String.format(<emphasis role="stringliteral">&quot;%s&#32;%s&apos;&#32;but&#32;got:&#32;%s&quot;</emphasis>,&#32;sharedMessages,&#32;expectedErrMsg,&#32;result));
<anchor xml:id="__file_acl_helper_test_8java_source_1l00122"/>00122 &#32;&#32;&#32;&#32;}
<anchor xml:id="__file_acl_helper_test_8java_source_1l00123"/>00123 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00124"/>00124 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00126"/>00126 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Helper&#32;methods</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00127"/>00127 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00128"/>00128 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;String&#32;getPosixFilePermissions&#32;(Path&#32;path)&#32;<emphasis role="keywordflow">throws</emphasis>&#32;Exception&#32;{
<anchor xml:id="__file_acl_helper_test_8java_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;the&#32;Posix&#32;file&#32;permissions&#32;for&#32;the&#32;file</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Set&lt;PosixFilePermission&gt;&#32;permissions&#32;=&#32;Files.getPosixFilePermissions(path);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00131"/>00131 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Convert&#32;the&#32;user&#32;permissions&#32;to&#32;rwx&#32;format</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StringBuilder&#32;rwxPermissions&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;StringBuilder();
<anchor xml:id="__file_acl_helper_test_8java_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(PosixFilePermission&#32;permission&#32;:&#32;EnumSet.copyOf(permissions))&#32;{
<anchor xml:id="__file_acl_helper_test_8java_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(permission)&#32;{
<anchor xml:id="__file_acl_helper_test_8java_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;OWNER_READ:
<anchor xml:id="__file_acl_helper_test_8java_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rwxPermissions.append(<emphasis role="stringliteral">&quot;r&quot;</emphasis>);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;OWNER_WRITE:
<anchor xml:id="__file_acl_helper_test_8java_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rwxPermissions.append(<emphasis role="stringliteral">&quot;w&quot;</emphasis>);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;OWNER_EXECUTE:
<anchor xml:id="__file_acl_helper_test_8java_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rwxPermissions.append(<emphasis role="stringliteral">&quot;x&quot;</emphasis>);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__file_acl_helper_test_8java_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__file_acl_helper_test_8java_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__file_acl_helper_test_8java_source_1l00149"/>00149 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rwxPermissions.toString();
<anchor xml:id="__file_acl_helper_test_8java_source_1l00151"/>00151 &#32;&#32;&#32;&#32;}
<anchor xml:id="__file_acl_helper_test_8java_source_1l00152"/>00152 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00153"/>00153 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;String&#32;getAclPermissions&#32;(Path&#32;path)&#32;<emphasis role="keywordflow">throws</emphasis>&#32;Exception&#32;{
<anchor xml:id="__file_acl_helper_test_8java_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;the&#32;ACL&#32;entries&#32;for&#32;the&#32;tmp&#32;test&#32;file</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AclFileAttributeView&#32;view&#32;=&#32;Files.getFileAttributeView(
<anchor xml:id="__file_acl_helper_test_8java_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Paths.get(path.toUri()),&#32;AclFileAttributeView.class);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;the&#32;ACL&#32;entries&#32;for&#32;the&#32;file</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;String&#32;permissions&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(AclEntry&#32;entry&#32;:&#32;view.getAcl())&#32;{
<anchor xml:id="__file_acl_helper_test_8java_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;each&#32;permission&#32;and&#32;add&#32;the&#32;corresponding&#32;symbol&#32;to&#32;the&#32;output&#32;string</emphasis>
<anchor xml:id="__file_acl_helper_test_8java_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(entry.permissions().contains(AclEntryPermission.READ_DATA))&#32;{
<anchor xml:id="__file_acl_helper_test_8java_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;permissions&#32;+=&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__file_acl_helper_test_8java_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(entry.permissions().contains(AclEntryPermission.WRITE_DATA))&#32;{
<anchor xml:id="__file_acl_helper_test_8java_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;permissions&#32;+=&#32;<emphasis role="stringliteral">&quot;w&quot;</emphasis>;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__file_acl_helper_test_8java_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(entry.permissions().contains(AclEntryPermission.EXECUTE))&#32;{
<anchor xml:id="__file_acl_helper_test_8java_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;permissions&#32;+=&#32;<emphasis role="stringliteral">&quot;x&quot;</emphasis>;
<anchor xml:id="__file_acl_helper_test_8java_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__file_acl_helper_test_8java_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__file_acl_helper_test_8java_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;permissions.replace(String.valueOf(<emphasis role="stringliteral">&quot;-&quot;</emphasis>),&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>&#32;);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00173"/>00173 &#32;&#32;&#32;&#32;}
<anchor xml:id="__file_acl_helper_test_8java_source_1l00174"/>00174 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00175"/>00175 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">boolean</emphasis>&#32;checkOwner&#32;(Path&#32;path,&#32;String&#32;owner)&#32;<emphasis role="keywordflow">throws</emphasis>&#32;Exception&#32;{
<anchor xml:id="__file_acl_helper_test_8java_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UserPrincipalLookupService&#32;lookupService&#32;=&#32;path.getFileSystem().getUserPrincipalLookupService();
<anchor xml:id="__file_acl_helper_test_8java_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UserPrincipal&#32;expectedOwner&#32;=&#32;lookupService.lookupPrincipalByName(owner);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UserPrincipal&#32;actualOwner&#32;=&#32;Files.getOwner(path);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;expectedOwner.equals(actualOwner);
<anchor xml:id="__file_acl_helper_test_8java_source_1l00180"/>00180 &#32;&#32;&#32;&#32;}
<anchor xml:id="__file_acl_helper_test_8java_source_1l00181"/>00181 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00182"/>00182 
<anchor xml:id="__file_acl_helper_test_8java_source_1l00183"/>00183 }
</programlisting></section>
