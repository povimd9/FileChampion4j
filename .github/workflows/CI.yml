name: CI

on:
  workflow_run:
    workflows:
      - Build, Test, and Bench
    types:
      - completed
    branches:
      - master

permissions:
  contents: write

jobs:
  check-master-build-result:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps: 
      - run: exit 1
      
  bench-and-package:
    name: Build, Bench, and Package
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout latest file from master
        uses: actions/checkout@v2
        with:
          ref: master
      
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'corretto'
          cache: 'maven'
        env:
          JAVA8_HOME: ${{ env.JAVA_HOME }}

      - name: Make mvnw executable
        run: |
          chmod +x ${{ github.workspace }}/mvnw

      - name: Build with Maven
        env:
          SIGN_KEY_PASS: ${{ secrets.SIGN_KEY_PASS }}
        run: |
          echo ${{ secrets.BLUMO_JKS }} > blumo_jks.b64
          openssl base64 -d -A -in blumo_jks.b64 > blumo.jks
          mvn -B -U clean install --file pom-release.xml "-Djava8.home=$JAVA8_HOME" "-Dsignkey.pass=$SIGN_KEY_PASS" "-Dblumo.jks=blumo.jks"

      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

      - name: Create version branch and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PREVIEW_VERSION: ${{ vars.PREVIEW_VERSION }}
        run: |
          git config --global user.name "povimd9"
          git config --global user.email "povimd9@users.noreply.github.com"
          git checkout -b "preview-$PREVIEW_VERSION"
          git add pom.xml
          git add pom-release.xml
          git add benchmarks/
          git add docs/
          git add target/dependency-list.txt
          git add target/filechampion4j.jar
          git add target/filechampion4j-jar-with-dependencies.jar
          git commit -m "Add new package dist resources"
          git push -f --set-upstream origin "preview-$PREVIEW_VERSION"


