name: master_build_workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - feature-*

permissions:
  contents: write
  security-events: write


jobs:
  check-out-code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

  build-and-test-on-nix:
    name: Build and Test on Linux
    needs: check-out-code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Make mvnw executable (Linux)
        run: |
          chmod +x ${{ github.workspace }}/mvnw

      - name: Build with Maven
        run: mvn -B -U package --file pom.xml

      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  build-and-test-on-macos:
    name: Build and Test on MacOS
    needs: check-out-code
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Make mvnw executable (Linux)
        run: |
          chmod +x ${{ github.workspace }}/mvnw

      - name: Build with Maven
        run: mvn -B -U package --file pom.xml

  build-and-test-on-windows:
    name: Build and Test on Windows
    needs: check-out-code
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B -U package --file pom.xml

  analyze:
    name: Analyze
    needs: [build-and-test-on-nix, build-and-test-on-macos, build-and-test-on-windows]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]

    steps:
      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality

      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - run: |
          echo "Run, Build Application using script"
          ./mvnw -B -U package -Dmaven.test.skip=true --file pom.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
        
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"
        
