name: master_build_workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - feature-*

permissions:
  contents: write
  security-events: write

jobs:
  build-and-test:
    name: Build and Test on ${{ matrix.os }} with JDK ${{ matrix.java-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        java-version: [8, 11, 17]
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: '${{ matrix.java-version }}'
          distribution: 'corretto'
      
      - name: Set JAVA_HOME_NIX
        if: startsWith(runner.os, 'Linux')
        run: |
          export JAVA_HOME=$(dirname $(dirname $(dirname $(readlink -f $(which javac)))))
          echo "JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV

      - name: Set JAVA_HOME_WIN
        if: startsWith(runner.os, 'Windows')
        run: |
          $jdkPath = Get-ChildItem -Path 'C:\Program Files\Amazon Corretto\' -Filter "jdk-*" -Directory -Depth 1 | Select-Object -Last 1
          $jdkPath = Join-Path $jdkPath.FullName "bin"
          echo "JAVA_HOME=$jdkPath" >> $GITHUB_ENV


      - name: Set JAVA_HOME (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          echo "JAVA_HOME=C:\Program Files\Java\jdk-${{ matrix.java-version }}" >> $GITHUB_ENV

      - name: Make mvnw executable (${{ matrix.os }})
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          chmod +x ${{ github.workspace }}/mvnw

      - name: Build with Maven
        run: mvn -B -U clean install --file pom.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6


  analyze:
    name: Analyze
    needs: [build-and-test]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]

    steps:
      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality

      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - run: |
          echo "Run, Build Application using script"
          ./mvnw -B -U package --file pom.xml

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"
